{"version":3,"sources":["images/dice-1.svg","images/dice-2.svg","images/dice-3.svg","images/dice-4.svg","images/dice-5.svg","images/dice-6.svg","components/Dice.tsx","displayAd.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dice","_ref","value","rolling","diceImages","dice1","dice2","dice3","dice4","dice5","dice6","_jsx","className","concat","children","src","alt","DisplayAds","useEffect","interval","setInterval","window","adsbygoogle","pushAd","push","e","console","error","clearInterval","style","display","App","numDice","setNumDice","useState","diceValues","setDiceValues","threshold","setThreshold","setRolling","Math","floor","even","odd","calculateEvenOddCounts","forEach","sameNumberCounts","calculateSameNumberCounts","counts","i","lessThan","greaterThanOrEqual","calculateThresholdCounts","_jsxs","htmlFor","type","id","min","onChange","Number","target","onClick","rollDice","setTimeout","newDiceValues","Array","from","length","random","map","index","reduce","sum","Object","entries","number","count","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","Error","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.32a98da8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dice-1.2addd685.svg\";","export default __webpack_public_path__ + \"static/media/dice-2.2ff4b385.svg\";","export default __webpack_public_path__ + \"static/media/dice-3.9fd5bcd3.svg\";","export default __webpack_public_path__ + \"static/media/dice-4.52e63b5a.svg\";","export default __webpack_public_path__ + \"static/media/dice-5.259a7cfc.svg\";","export default __webpack_public_path__ + \"static/media/dice-6.ba12c1ad.svg\";","import React from 'react';\nimport dice1 from '../images/dice-1.svg';\nimport dice2 from '../images/dice-2.svg';\nimport dice3 from '../images/dice-3.svg';\nimport dice4 from '../images/dice-4.svg';\nimport dice5 from '../images/dice-5.svg';\nimport dice6 from '../images/dice-6.svg';\n\ninterface DiceProps {\n  value: number;\n  rolling: boolean;\n}\n\nconst Dice = ({ value, rolling }: DiceProps): React.ReactElement => {\n  const diceImages: { [key: number]: string } = {\n    1: dice1,\n    2: dice2,\n    3: dice3,\n    4: dice4,\n    5: dice5,\n    6: dice6,\n  };\n\n  return (\n    <div className={`w-24 h-24 bg-white rounded-lg shadow-md flex items-center justify-center overflow-hidden ${rolling ? 'animate-roll' : ''}`}>\n      <img src={diceImages[value]} alt={`Dice ${value}`} className=\"w-full h-full object-contain\" />\n    </div>\n  );\n};\n\nexport default Dice;","import { useEffect } from 'react';\n\ndeclare global {\n  interface Window {\n    adsbygoogle: { [key: string]: unknown }[];\n  }\n}\n\nconst DisplayAds = () => {\n  useEffect(() => {\n    const pushAd = () => {\n      try {\n        const adsbygoogle = window.adsbygoogle as { [key: string]: unknown }[];\n        // console.log({ adsbygoogle })\n        (adsbygoogle.push as (obj: object) => void)({});\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    let interval = setInterval(() => {\n      // Check if Adsense script is loaded every 300ms\n      if (window.adsbygoogle) {\n        pushAd()\n        // clear the interval once the ad is pushed so that function isn't called indefinitely\n        clearInterval(interval)\n      }\n    }, 300)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n  return (\n    <ins\n      className='adsbygoogle'\n      style={{ display: 'block' }}\n      data-ad-client='ca-pub-7452986546914975'\n      data-ad-slot='3545458418'\n      data-ad-format='auto'\n      data-full-width-responsive='true'\n    ></ins>\n  )\n}\n\nexport default DisplayAds","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport './App.css';\nimport Dice from './components/Dice';\nimport DisplayAds from './displayAd';\n\nfunction App(): React.ReactElement {\n  const [numDice, setNumDice] = useState<number>(1); // 주사위 개수\n  const [diceValues, setDiceValues] = useState<number[]>([]); // 주사위 값들\n  const [threshold, setThreshold] = useState<number | null>(null); // 기준값\n  const [rolling, setRolling] = useState<boolean>(false); // 주사위 굴림 애니메이션 상태\n\n  useEffect(() => {\n    // 초기 기준값 설정: (주사위 개수 * 6) / 2\n    setThreshold(Math.floor((numDice * 6) / 2));\n  }, [numDice]);\n\n  const rollDice = (): void => {\n    setRolling(true); // 애니메이션 시작\n    setTimeout(() => {\n      const newDiceValues: number[] = Array.from({ length: numDice }, () => Math.floor(Math.random() * 6) + 1);\n      setDiceValues(newDiceValues);\n      setRolling(false); // 애니메이션 종료\n    }, 1000); // 1초 후에 값 변경 및 애니메이션 종료\n  };\n\n  // 통계 계산 함수들\n  const calculateTotal = (): number => {\n    return diceValues.reduce((sum, value) => sum + value, 0);\n  };\n\n  const calculateEvenOddCounts = (): { even: number; odd: number } => {\n    let even: number = 0;\n    let odd: number = 0;\n    diceValues.forEach((value: number) => {\n      if (value % 2 === 0) {\n        even++;\n      } else {\n        odd++;\n      }\n    });\n    return { even, odd };\n  };\n\n  const calculateSameNumberCounts = (): { [key: number]: number } => {\n    const counts: { [key: number]: number } = {};\n    for (let i = 1; i <= 6; i++) {\n      counts[i] = 0;\n    }\n    diceValues.forEach((value: number) => {\n      counts[value]++;\n    });\n    return counts;\n  };\n\n  const calculateThresholdCounts = (): { lessThan: number; greaterThanOrEqual: number } => {\n    let lessThan: number = 0;\n    let greaterThanOrEqual: number = 0;\n    diceValues.forEach((value: number) => {\n      if (threshold !== null) {\n        if (value < threshold) {\n          lessThan++;\n        } else {\n          greaterThanOrEqual++;\n        }\n      }\n    });\n    return { lessThan, greaterThanOrEqual };\n  };\n\n  const { even, odd } = calculateEvenOddCounts();\n  const sameNumberCounts = calculateSameNumberCounts();\n  const { lessThan, greaterThanOrEqual } = calculateThresholdCounts();\n\n  return (\n    <div className=\"min-h-screen bg-blue-100 flex flex-col items-center justify-center p-4 font-sans\">\n      <h1 className=\"text-5xl font-extrabold text-blue-800 mb-8 drop-shadow-lg\">주사위 굴리기 게임</h1>\n\n      <div className=\"bg-white p-6 rounded-xl shadow-lg mb-6 w-full max-w-md\">\n        <div className=\"mb-4\">\n          <label htmlFor=\"numDice\" className=\"block text-lg font-medium text-gray-700 mb-1\">주사위 개수:</label>\n          <input\n            type=\"number\"\n            id=\"numDice\"\n            min=\"1\"\n            value={numDice}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setNumDice(Number(e.target.value))}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 text-lg\"\n          />\n        </div>\n\n        <div className=\"mb-4\">\n          <label htmlFor=\"threshold\" className=\"block text-lg font-medium text-gray-700 mb-1\">기준값:</label>\n          <input\n            type=\"number\"\n            id=\"threshold\"\n            value={threshold !== null ? threshold : ''}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setThreshold(Number(e.target.value))}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 text-lg\"\n          />\n        </div>\n\n        <button\n          onClick={rollDice}\n          className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-lg text-xl font-semibold shadow-md hover:from-blue-600 hover:to-purple-700 transition duration-300 transform hover:scale-105\"\n        >\n          주사위 굴리기\n        </button>\n      </div>\n\n      <div className=\"w-full flex flex-nowrap overflow-x-auto justify-center gap-6 mb-8\">\n        {diceValues.map((value: number, index: number) => (\n          <Dice key={index} value={value} rolling={rolling} />\n        ))}\n      </div>\n\n      <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n        <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">통계</h2>\n        <p className=\"text-xl text-gray-700 mb-2\">총합: <span className=\"font-extrabold text-blue-600\">{calculateTotal()}</span></p>\n        <p className=\"text-xl text-gray-700 mb-2\">홀수: <span className=\"font-extrabold text-purple-600\">{odd}</span>개, 짝수: <span className=\"font-extrabold text-green-600\">{even}</span>개</p>\n        <div className=\"text-xl text-gray-700 mb-2\">\n          같은 수:\n          {Object.entries(sameNumberCounts).map(([number, count]) => (\n            <span key={number} className=\"ml-3\"><span className=\"font-extrabold text-yellow-600\">{Number(number)}</span>: {count}개</span>\n          ))}\n        </div>\n        {threshold !== null && (\n          <p className=\"text-xl text-gray-700\">기준값({threshold}) 미만: <span className=\"font-extrabold text-blue-400\">{lessThan}</span>개, 이상: <span className=\"font-extrabold text-blue-500\">{greaterThanOrEqual}</span>개</p>\n        )}\n      </div>\n      <div className=\"w-full flex justify-center my-8\">\n        componentToRender && <DisplayAds /><DisplayAds/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById('root');\nif (!rootElement) throw new Error('Failed to find the root element');\nconst root = ReactDOM.createRoot(rootElement);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}